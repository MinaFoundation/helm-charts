apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mina-mesh.fullname" . }}
  labels:
    {{- include "mina-mesh.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mina-mesh.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mina-mesh.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mina-mesh.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: mina-mesh-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash", "/scripts/apply-search-tx-optimizations.sh"]
          args: []
          env:
            - name: SEARCH_TX_OPTIMIZATIONS
              value: {{ ternary "enabled" "disabled" .Values.minaMesh.enableSearchTxOptimizations }}
            - name: ARCHIVE_DATABASE_URL
              value: {{ .Values.minaMesh.archiveDatabaseUrl }}
          volumeMounts:
            - name: scripts
              mountPath: "/scripts/"
      containers:
        - name: mina-mesh
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.command }}
          command:
            {{- toYaml .Values.command | nindent 12 }}
          {{- end }}
          args:
            - "--archive-database-url"
            - {{ .Values.minaMesh.archiveDatabaseUrl | quote }}
            - "--proxy-url"
            - {{ .Values.minaMesh.minaGraphqlUrl | quote }}
            - {{ .Values.minaMesh.host | quote }}
            - {{ .Values.service.port | quote }}
            {{- if .Values.extraArgs }}
            {{- toYaml .Values.extraArgs | nindent 12 }}
            {{- end }}
          env:
            {{- if .Values.envVars }}
            {{- toYaml .Values.envVars | nindent 12 }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: scripts
          configMap:
            name: {{ include "mina-mesh.fullname" . }}-scripts
            defaultMode: 0777
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
