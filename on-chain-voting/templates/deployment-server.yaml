apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "on-chain-voting.fullname" . }}-server
  labels:
    {{- include "on-chain-voting.labels" . | nindent 4 }}
  {{- with .Values.server.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels:
      {{- include "on-chain-voting.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: server
  template:
    metadata:
      {{- with .Values.server.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "on-chain-voting.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: server
    spec:
      {{- with .Values.server.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "on-chain-voting.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.server.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.server.securityContext | nindent 12 }}
          image: "{{ .Values.server.image.repository }}:{{ .Values.server.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          {{- with .Values.server.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command: [ "/app/mina_ocv" ]
          {{- if .Values.server.args }}
          args:
            {{- toYaml .Values.server.args | nindent 12 }}
          {{- end }}
          env:
              {{- if .Values.server.postgresConnectionString }}
            - name: DATABASE_URL
              value: {{ .Values.server.postgresConnectionString | quote }}
              {{- else }}
            - name: DATABASE_URL
              value: "postgres://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ printf "%s-postgresql" .Release.Name }}:5432/{{ .Values.postgresql.auth.database }}"
            - name: DB_HOST
              value: {{ printf "%s-postgresql" .Release.Name | quote }}
            - name: DB_PORT
              value: "5432"
            - name: DB_NAME
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: DB_USER
              value: {{ .Values.postgresql.auth.username | quote }}
              {{- end }}
            - name: ARCHIVE_DATABASE_URL
              value: {{ .Values.server.archivePostgresConnectionString | quote }}
            - name: SERVER_ALLOWED_ORIGINS
              value: {{ .Values.server.allowedOrigins | quote }}
            - name: NETWORK
              value: {{ .Values.server.network | quote }}
            - name: BUCKET_NAME
              value: {{ .Values.server.ledgersBucket | quote }}
            {{- if .Values.server.extraEnvVars }}
            {{- toYaml .Values.server.extraEnvVars | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.server.service.port }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
