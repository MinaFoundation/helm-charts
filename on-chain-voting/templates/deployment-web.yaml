apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "on-chain-voting.fullname" . }}-web
  labels:
    {{- include "on-chain-voting.labels" . | nindent 4 }}
  {{- with .Values.web.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels:
      {{- include "on-chain-voting.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: web
  template:
    metadata:
      {{- with .Values.web.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "on-chain-voting.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: web
    spec:
      {{- with .Values.web.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "on-chain-voting.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.web.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.web.securityContext | nindent 12 }}
          image: "{{ .Values.web.image.repository }}:{{ .Values.web.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.web.image.pullPolicy }}
          {{- with .Values.web.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command: [ "/app/start" ]
          {{- if .Values.web.args }}
          args:
            {{- toYaml .Values.web.args | nindent 12 }}
          {{- end }}
          env:
            - name: API_BASE_URL
              value: {{ .Values.web.apiBaseURL | default (printf "http://%s-server:8080" .Release.Name) | quote }}
            - name: NEXT_PUBLIC_API_BASE_URL
              value: {{ .Values.web.nextPublicApiBaseURL | default (printf "http://%s-server:8080" .Release.Name) | quote }}
            {{- if .Values.web.releaseStage }}
            - name: RELEASE_STAGE
              value: {{ .Values.web.releaseStage | quote }}
            {{- end }}
            {{- if .Values.web.nextPublicReleaseStage }}
            - name: NEXT_PUBLIC_RELEASE_STAGE
              value: {{ .Values.web.nextPublicReleaseStage | quote }}
            {{- end }}
            {{- if .Values.web.extraEnvVars }}
            {{- toYaml .Values.web.extraEnvVars | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.web.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.web.resources | nindent 12 }}
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
