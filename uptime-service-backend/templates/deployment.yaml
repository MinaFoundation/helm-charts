# One of the authentication methods has to be provided
{{- if not (and .Values.backend.awsConfig.accessKeyId .Values.backend.awsConfig.secretAccessKey) }}
{{- required "Both .Values.backend.awsConfig.accessKeyId .Values.backend.awsConfig.secretAccessKey are required. Cannot authenticate without them" .Values.backend.awsConfig.accessKeyId -}}
{{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "uptime-service-backend.fullname" . }}
  labels:
    {{- include "uptime-service-backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "uptime-service-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.backend.metrics.enabled }}
        prometheus.io/scrape: 'true'
        prometheus.io/port: {{ .Values.service.port | quote }}
        prometheus.io/path: '/metrics'
      {{- end }}
      labels:
      {{- include "uptime-service-backend.labels" . | nindent 8 }}
      {{- with .Values.podLabels }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "uptime-service-backend.serviceAccountName" . }}
      initContainers:
        {{- if .Values.backend.storage.keyspace }}
        - name: dbmigration
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: [ "db_migration" ]
          args: [ "up" ]
          env:
            # Backend related variables
            - name: GOLOG_LOG_LEVEL
              value: {{ .Values.backend.logLevel }}
            - name: CONFIG_NETWORK_NAME
              value: {{ .Values.backend.network }}
            - name: VERIFY_SIGNATURE_DISABLED
              value: {{ ternary "1" "0" .Values.backend.verifySignatureDisabled | quote }}
            # Whitelisting related variables
            {{- with .Values.backend.whitelistConfig }}
            {{- if .enabled }}
            - name: CONFIG_GSHEET_ID
              value: {{ .spreadsheetId | quote }}
            - name: DELEGATION_WHITELIST_LIST
              value: {{ .sheet | quote }}
            - name: DELEGATION_WHITELIST_COLUMN
              value: {{ .column | quote }}
            - name: DELEGATION_WHITELIST_DISABLED
              value: "0"
            {{- else }}
            - name: DELEGATION_WHITELIST_DISABLED
              value: "1"
            {{- end }}
            {{- end }}
            # AWS related variables
            {{- if .Values.backend.storage.keyspace.awsKeyspaceName }}
            - name: AWS_KEYSPACE
              value: {{ .Values.backend.storage.keyspace.awsKeyspaceName | quote }}
            {{- end }}
            # image is built with AWS_SSL_CERTIFICATE_PATH=/database/cert/sf-class2-root.crt therefore we only set it if it needs to be overridden.
            {{- if .Values.secret.keyspaceCert.override }}
            - name: AWS_SSL_CERTIFICATE_PATH
              value: /uptime/cert/{{ .Values.secret.keyspaceCert.name }}
            {{- end }}
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.backend.awsConfig.accessKeyId | quote }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.backend.awsConfig.secretAccessKey | quote }}
            - name: AWS_REGION
              value: {{ .Values.backend.awsConfig.region | quote }}
          volumeMounts:
            {{- if .Values.secret.keyspaceCert.override }}
            - name: {{ .Release.Name }}-keyspace-cert
              mountPath: /uptime/cert
            {{- end }}
        {{- end }}
      containers:
        - name: backend
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            # Backend related variables
            - name: REQUESTS_PER_PK_HOURLY
              value: {{ .Values.backend.requestsPerPkHourly | quote }}
            - name: GOLOG_LOG_LEVEL
              value: {{ .Values.backend.logLevel }}
            - name: CONFIG_NETWORK_NAME
              value: {{ .Values.backend.network }}
            {{- if and .Values.backend.storage.local .Values.backend.storage.local.path }}
            - name: CONFIG_FILESYSTEM_PATH
              value: {{ .Values.backend.storage.local.path | quote }}
            {{- end }}
            # Whitelisting related variables
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /uptime/gcloud/gcp-sa.json
            {{- with .Values.backend.whitelistConfig }}
            {{- if .enabled }}
            - name: CONFIG_GSHEET_ID
              value: {{ .spreadsheetId | quote }}
            - name: DELEGATION_WHITELIST_LIST
              value: {{ .sheet | quote }}
            - name: DELEGATION_WHITELIST_COLUMN
              value: {{ .column | quote }}
            - name: DELEGATION_WHITELIST_DISABLED
              value: "0"
            {{- else }}
            - name: DELEGATION_WHITELIST_DISABLED
              value: "1"
            {{- end }}
            {{- end }}
            # AWS related variables
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.backend.awsConfig.accessKeyId | quote }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.backend.awsConfig.secretAccessKey | quote }}
            - name: AWS_REGION
              value: {{ .Values.backend.awsConfig.region | quote }}
            {{- if and .Values.backend.storage.s3 .Values.backend.storage.s3.awsBucketNameSuffix }}
            - name: AWS_BUCKET_NAME_SUFFIX
              value: {{ .Values.backend.storage.s3.awsBucketNameSuffix | quote }}
            - name: AWS_ACCOUNT_ID
              value: {{ .Values.backend.awsConfig.accountId | quote }}
            {{- end }}
            {{- if and .Values.backend.storage.keyspace .Values.backend.storage.keyspace.awsKeyspaceName }}
            - name: AWS_KEYSPACE
              value: {{ .Values.backend.storage.keyspace.awsKeyspaceName | quote }}
            {{- end }}
            {{- if .Values.secret.keyspaceCert.override }}
            - name: AWS_SSL_CERTIFICATE_PATH
              value: /uptime/cert/{{ .Values.secret.keyspaceCert.name }}
            {{- end }}
            {{- if .Values.backend.extraEnvVars }}
            {{- toYaml .Values.backend.extraEnvVars | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name:  {{ .Release.Name }}-gcp-sa
              mountPath: /uptime/gcloud
            {{- if .Values.secret.keyspaceCert.override }}
            - name: {{ .Release.Name }}-keyspace-cert
              mountPath: /uptime/cert
            {{- end }}
      volumes:
        {{- if .Values.secret.keyspaceCert.override }}
        - name: {{ .Release.Name }}-keyspace-cert
          secret:
            secretName: {{ .Release.Name }}
            defaultMode: 0600
            items:
              - key: {{ .Values.secret.keyspaceCert.name }}
                path: {{ .Values.secret.keyspaceCert.name }}
        {{- end }}
        - name: {{ .Release.Name }}-gcp-sa
          secret:
            secretName: {{ .Release.Name }}
            defaultMode: 0600
            items:
              - key: gcp-sa-json
                path: gcp-sa.json
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
