{{- if and .Values.archive.enablePostgresDB .Values.archive.enableDumpCronjob }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}
spec:
  concurrencyPolicy: Replace
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 3
  schedule: "0 0 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: {{ .Release.Name }}
          restartPolicy: Never
          containers:
            - name: {{ .Release.Name }}-dump-cronjob
              image: postgres:15-alpine
              command:
                - /bin/bash
                - -c
                - '
                apk add --no-cache python3 py3-pip;
                pip3 install --upgrade pip;
                pip3 install --no-cache-dir awscli;
                DATE="$(date +%F_%H%M)";
                FILENAME="{{ .Values.archive.testnet }}-archive-dump-${DATE}".sql;
                pg_dump --no-owner --create {{ tpl .Values.archive.postgresUri . }} > $FILENAME;
                tar -czvf $FILENAME.tar.gz $FILENAME;
                echo "archive database dumped";
                aws s3 cp $FILENAME.tar.gz s3://673156464838-archive-node-daily-backups;
                echo "archive database uploaded to bucket";
                '
{{- end -}}
