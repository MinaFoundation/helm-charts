apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "delegation-verify-coordinator.fullname" . }}
  labels:
    {{- include "delegation-verify-coordinator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "delegation-verify-coordinator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "delegation-verify-coordinator.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "delegation-verify-coordinator.serviceAccountName" . }}
      initContainers:
        - name: initdb
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
            {{- $postgresHost := (tpl .Values.coordinator.postgres.host .) }}
            {{- with .Values.coordinator }}
            - name: POSTGRES_HOST
              value: {{ $postgresHost | quote }}
            - name: POSTGRES_PORT
              value: {{ .postgres.port | quote }}
            - name: POSTGRES_DB
              value: {{ .postgres.db | quote }}
            - name: POSTGRES_USER
              value: {{ .postgres.user | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .postgres.password | quote }}
            - name: POSTGRES_RO_USER
              value: {{ .postgres.roUser | quote }}
            - name: POSTGRES_RO_PASSWORD
              value: {{ .postgres.roPassword | quote }}
            {{- end }}
          command: ["/bin/entrypoint/entrypoint-initdb.sh"]
          volumeMounts:
            - name: entrypoint-initdb
              mountPath: "/bin/entrypoint"
      containers:
        - name: coordinator
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.coordinator.command.override }}
          command: {{ printf "[%s]" (join ", " .Values.coordinator.command.override) }}
          {{- end }}
          env:
            {{- with .Values.coordinator }}
            - name: SURVEY_INTERVAL_MINUTES
              value: {{ .surveyIntervalMinutes | quote }}
            - name: POSTGRES_HOST
              value: {{ $postgresHost | quote }}
            - name: POSTGRES_PORT
              value: {{ .postgres.port | quote }}
            - name: POSTGRES_DB
              value: {{ .postgres.db | quote }}
            - name: POSTGRES_USER
              value: {{ .postgres.user | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .postgres.password | quote }}
            - name: NO_CHECKS
              value: {{ .noChecks | quote }}
            - name: MINI_BATCH_NUMBER
              value: {{ .miniBatchNumber | quote }}
            - name: UPTIME_DAYS_FOR_SCORE
              value: {{ .uptimeDaysForScore | quote }}
            - name: WORKER_TAG
              value: {{ .worker.tag }}
            - name: WORKER_IMAGE
              value: {{ .worker.image }}
            - name: WORKER_CPU_REQUEST
              value: {{ .worker.cpu.request | quote }}
            - name: WORKER_CPU_LIMIT
              value: {{ .worker.cpu.limit | quote }}
            - name: WORKER_MEMORY_REQUEST
              value: {{ .worker.memory.request | quote }}
            - name: WORKER_MEMORY_LIMIT
              value: {{ .worker.memory.limit | quote }}
            - name: WORKER_TTL_SECONDS_AFTER_FINISHED
              value: {{ .worker.ttlSecondsAfterFinished | quote }}
            - name: CASSANDRA_HOST
              value: {{ .aws.host }}
            - name: CASSANDRA_PORT
              value: {{ .aws.port | quote }}
            - name: AWS_KEYSPACE
              value: {{ .aws.keyspace }}
            - name: AWS_REGION
              value: {{ .aws.region }}
            - name: AWS_S3_BUCKET
              value: {{ .aws.s3Bucket }}
            - name: PLATFORM
              value: {{ .platform }}
            - name: NETWORK_NAME
              value: {{ .networkName }}
            {{- if .ssl.certfile }}
            - name: SSL_CERTFILE
              value: {{ .ssl.certfile }}
            {{- end }}
            {{- if and .aws.accessKeyID .aws.secretAccessKey }}
            - name: AWS_ACCESS_KEY_ID
              value: {{ .aws.accessKeyID }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .aws.secretAccessKey }}
            {{- end }}
            {{- end }}
            - name: AWS_ROLE_SESSION_NAME
              value: {{ include "delegation-verify-coordinator.fullname" . }}
            - name: AUTH_VOLUME_MOUNT_PATH
              value: /var/mina-delegation-verify-auth
            - name: SPREADSHEET_CREDENTIALS_JSON
              value: /usr/src/app/gcloud/gcp-sa.json
            {{- if .Values.coordinator.envVars }}
            {{- toYaml .Values.coordinator.envVars | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name:  {{ .Release.Name }}-gcp-sa
              mountPath: /usr/src/app/gcloud
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: entrypoint-initdb
          configMap:
            name: {{ .Release.Name }}-initdb
            defaultMode: 0777
            items:
              - key: "entrypoint-initdb.sh"
                path: "entrypoint-initdb.sh"
        - name: {{ .Release.Name }}-gcp-sa
          secret:
            secretName: {{ .Release.Name }}
            defaultMode: 0600
            items:
              - key: gcp-sa-json
                path: gcp-sa.json
