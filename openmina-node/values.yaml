# Default values for openmina.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # -- Global Docker image registry
  imageRegistry: "docker.io"

# -- The number of replicas
replicaCount: 1

image:
  # -- The image repository
  repository: openmina/openmina
  # -- The pullPolicy used when pulling the image
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: "0.11.2"

# -- The secrets used to pull the image
imagePullSecrets: []
# -- The release name override
nameOverride: ""
# -- The full release name override
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  name: ""

# -- Annotations to add to deployments
deploymentAnnotations: {}
# -- Annotations to add to the pods
podAnnotations: {}
# -- Label to add to the pods
podLabels: {}

# -- The Pod Security Context
podSecurityContext: {}
  # fsGroup: 2000

# -- The Security Context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- The service type
  type: ClusterIP
  # -- Loadbalancer class
  loadBalancerClass: ""
  # -- The service port
  port: 3000
  # -- The service labels
  labels: {}
  # -- The service annotations
  annotations: {}

ingress:
  # -- Whether to create an Ingress
  enabled: false
  # -- The Ingress Class Name to use
  className: ""
  # -- The Ingress Annotations
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- The Ingress Hosts
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # -- The TLS configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

node:
  # -- The home directory of the node
  homeDirectory: "/root/.openmina"
  wallet:
    # -- The wallet private key
    privateKey: ""
    # -- The wallet public key
    publicKey: ""
  libp2p:
    # -- The libp2p private key
    privateKey: ""
    # -- The libp2p public key
    publicKey: ""
    # -- The libp2p peer id
    port: 8302
    # -- Discovery External IP
    discoveryExternalIp:
      # -- Enable Discovery External IP
      enabled: false
      # -- Target DNS
      targetDNS: example.nlb.us-west-2.amazonaws.com
  # -- The arguments to pass at runtime
  args: []
  # -- The environment variables to set
  envVars: {}
  # - name: FOO
  #   value: FOO
  # - name: BAR
  #   valueFrom:
  #     secretKeyRef:
  #       name: mySecret
  #       key: bar

persistence:
  # -- Enable persistence using PVC
  enabled: true
  # -- The StorageClass of the PVC
  storageClass: ebs-gp3-encrypted
  # -- The access mode of the PVC
  accessMode: ReadWriteOnce
  # -- The size of the PVC
  size: 1Gi
  # -- Annotations to add to the PVC
  annotations: {}

# -- Resource limitations for the pods
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Liveness check configuration
livenessProbe:
  # httpGet:
  #   path: /
  #   port: http
# -- Readiness check configuration
readinessProbe:
  # httpGet:
  #   path: /
  #   port: http

# -- Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# -- Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# -- Node selector labels
nodeSelector: {}

# -- Tolerations
tolerations: []

# -- Affinity rules
affinity: {}
